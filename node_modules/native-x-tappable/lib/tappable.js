import React, { useCallback } from 'react';
import { Platform, TouchableOpacity, View } from 'react-native';
export function Tappable(props) {
    const { children, data, feedback, disabled, onTap, style } = props;
    const callback = useCallback(() => {
        if (!disabled && typeof onTap === 'function') {
            onTap(data);
        }
    }, [disabled, onTap, data]);
    if (disabled === true || onTap == null) {
        return (React.createElement(View, { style: [
                Platform.select({ web: { cursor: disabled ? 'not-allowed' : 'auto' } }),
                style,
            ] }, children));
    }
    return (React.createElement(TouchableOpacity, { disabled: disabled, activeOpacity: feedback === false || (!!onTap && feedback == null) ? 1 : 0.8, onPress: callback, style: style },
        React.createElement(View, { style: [Platform.select({ web: { cursor: 'pointer' } }), style] }, children)));
}
