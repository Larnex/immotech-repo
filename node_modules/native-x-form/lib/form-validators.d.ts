export declare type Validator<T> = (input: T) => string | undefined;
export declare function isEmpty<T>(errorMessage: string): Validator<T>;
export declare function isInvalidEmail(errorMessage?: string): Validator<string>;
export declare function isNonAlphaNumeric(errorMessage: string): Validator<string>;
export interface ValidatorContext<T> {
    value?: T;
    error: string | undefined;
    clear: () => void;
    validate: () => boolean;
}
export declare function useValidatedState<T>(validators: Validator<T>[], initialValue?: T): [T | undefined, (v: T) => void, ValidatorContext<T>];
