import { Button } from 'native-x-button';
import { Spacer } from 'native-x-spacer';
import { Stack } from 'native-x-stack';
import { Text } from 'native-x-text';
import { COLOR } from 'native-x-theme';
import React, { useCallback } from 'react';
import { Modal } from './modal';
export function ConfirmationModal({ children, okText = 'OK', okButtonBackgroundColor = COLOR.ACCENT, okTextColor, cancelText = 'Cancel', cancelButtonBackgroundColor = COLOR.SECONDARY, cancelTextColor, onOk, onCancel, onClose, ...props }) {
    const handleOk = useCallback(() => {
        onOk?.();
        onClose?.();
    }, [onClose, onOk]);
    const handleCancel = useCallback(() => {
        onCancel?.();
        onClose?.();
    }, [onClose, onCancel]);
    return (React.createElement(Modal, Object.assign({}, props, { onClose: onClose, padding: 'normal' }),
        React.createElement(Stack, { padding: 'normal' },
            React.createElement(Text, { alignCenter: true }, children)),
        React.createElement(Spacer, { size: 'small' }),
        React.createElement(Stack, { horizontal: true, justifyBetween: true },
            React.createElement(Button, { backgroundColor: cancelButtonBackgroundColor, onTap: handleCancel, rounded: true, size: 'small', width: 100, textColor: cancelTextColor }, cancelText),
            React.createElement(Spacer, { size: 'small' }),
            React.createElement(Button, { backgroundColor: okButtonBackgroundColor, onTap: handleOk, rounded: true, size: 'small', width: 100, textColor: okTextColor }, okText))));
}
